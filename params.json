{"name":"Tinytypes","tagline":"Typed wrappers on native values + framework integrations.","body":"# TinyTypes\r\n\r\n[![Build Status](https://travis-ci.org/caligin/tinytypes.svg?branch=master)](https://travis-ci.org/caligin/tinytypes)\r\n\r\n## What\r\n\r\nType safe wrappers on native types && support for commonly used frameworks.\r\n\r\nSee [my slides 'bout it](http://slides.com/caligin/tinytypes#/).\r\n\r\n## Status\r\n\r\nSupported libraries/frameworks:\r\n\r\n- Jackson\r\n- Jersey\r\n\r\nthis implies:\r\n- Dropwizard (resources only, only JSON mediaType)\r\n\r\n## Defining a TinyType\r\n\r\nAdd jitpack repository (Maven):\r\n```\r\n<repository>\r\n    <id>jitpack.io</id>\r\n    <url>https://jitpack.io</url>\r\n</repository>\r\n```\r\n\r\nAdd tinytypes dep (Maven):\r\n```\r\n<dependency>\r\n    <groupId>com.github.caligin.tinytypes</groupId>\r\n    <artifactId>tinytypes</artifactId>\r\n    <version>1.1.0</version>\r\n</dependency>\r\n```\r\n\r\n- Extend one of the base TinyTypes classes\r\n- It must not be `abstract`\r\n- Provide a constructor matching the one in the base class\r\n\r\nExample:\r\n```\r\npublic class SomeKindOfId extends StringTinyType {\r\n    public SomeKindOfId(String value) {\r\n        super(value);\r\n        // ... additional validation or restrictions here\r\n    }\r\n}\r\n```\r\n\r\n## Use with Jackson\r\n\r\nAdd jitpack repository (Maven):\r\n```\r\n<repository>\r\n    <id>jitpack.io</id>\r\n    <url>https://jitpack.io</url>\r\n</repository>\r\n```\r\n\r\nAdd jackson dep (Maven):\r\n```\r\n<dependency>\r\n    <groupId>com.github.caligin.tinytypes</groupId>\r\n    <artifactId>jackson-datatype-tinytypes</artifactId>\r\n    <version>1.1.0</version>\r\n</dependency>\r\n```\r\n\r\nRegister module on ObjectMapper:\r\n```\r\nnew ObjectMapper().registerModule(new TinyTypesModule())\r\n```\r\n\r\nProfit!\r\n```\r\nobjectMapper.writeValueAsString(new SomeKindOfId(\"ag7weq\")); // \"ag7weq\"\r\n\r\nobjectMapper.readValue(\"ag7weq\", SomeKindOfId.class); // SomeKindOfId#ag7weq\r\n```\r\n\r\n## Use with Jersey\r\n\r\nAdd jitpack repository (Maven):\r\n```\r\n<repository>\r\n    <id>jitpack.io</id>\r\n    <url>https://jitpack.io</url>\r\n</repository>\r\n```\r\n\r\nAdd jersey dep (Maven):\r\n```\r\n<dependency>\r\n    <groupId>com.github.caligin.tinytypes</groupId>\r\n    <artifactId>tinytypes-jersey</artifactId>\r\n    <version>1.1.0</version>\r\n</dependency>\r\n```\r\n\r\nRegister module on ObjectMapper:\r\n```\r\nnew ObjectMapper().registerModule(new TinyTypesModule())\r\n```\r\n\r\nRegister the ParamProvider:\r\n```\r\n.addProvider(TinyTypesParamProvider.class)\r\n```\r\n\r\nRegister the HeaderDelegates:\r\n```\r\nJerseyResponseSupport.registerTinyTypes(\r\n        Samples.Str.class,\r\n        ... (other TTs here)\r\n);\r\n\r\n```\r\n\r\nProfit!\r\n\r\n(See tinytypes-examples test cases for more on how to use them with Jersey)\r\n\r\n## Planned for the future\r\n\r\n- Android Parchelable\r\n- Hibernate\r\n- Spring\r\n- Xstream\r\n\r\nI won't prioritize until I have a real necessity to use, PRs are welcome.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}